{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Claudia/Desktop/MesQueUnGrupDeDones1.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createClient } from '@supabase/supabase-js';\nimport { environment } from '../../../environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./notification.service\";\nimport * as i3 from \"./loading.service\";\n// Definir el error NavigatorLockAcquireTimeoutError manualmente para evitar el error de compilación.\nclass NavigatorLockAcquireTimeoutError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'NavigatorLockAcquireTimeoutError';\n  }\n}\nexport class SupabaseService {\n  constructor(router, notificationService, loadingService) {\n    this.router = router;\n    this.notificationService = notificationService;\n    this.loadingService = loadingService;\n    this.userSubject = new BehaviorSubject(null);\n    this.sessionSubject = new BehaviorSubject(null);\n    this.initialized = false;\n    this.initializationPromise = null;\n    this.supabase = createClient(environment.supabase.url, environment.supabase.anonKey, {\n      auth: {\n        autoRefreshToken: true,\n        persistSession: true,\n        detectSessionInUrl: false,\n        storage: localStorage,\n        storageKey: 'supabase.auth.token'\n      }\n    });\n    this.initializationPromise = this.initializeAuth();\n  }\n  initializeAuth() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          data: {\n            session\n          }\n        } = yield _this.supabase.auth.getSession();\n        _this.userSubject.next(session?.user || null);\n        _this.sessionSubject.next(session || null);\n        _this.supabase.auth.onAuthStateChange((event, session) => {\n          _this.userSubject.next(session?.user || null);\n          _this.sessionSubject.next(session || null);\n          if (event === 'SIGNED_OUT') {\n            _this.router.navigate(['/']);\n            _this.notificationService.info('Sessió tancada correctament');\n          } else if (event === 'SIGNED_IN') {\n            _this.notificationService.success('Sessió iniciada correctament');\n          }\n        });\n        _this.initialized = true;\n      } catch (error) {\n        if (error instanceof NavigatorLockAcquireTimeoutError) {\n          console.error('Failed to acquire lock for Supabase auth token:', error);\n          _this.notificationService.error('Error al inicializar la sesión. Por favor, inténtalo de nuevo.');\n        } else {\n          console.error('Error initializing Supabase:', error);\n          _this.notificationService.error('Error al inicializar Supabase. Por favor, inténtalo de nuevo.');\n        }\n      }\n    })();\n  }\n  ensureInitialized() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (_this2.initializationPromise) {\n        yield _this2.initializationPromise;\n      }\n    })();\n  }\n  get user$() {\n    return this.userSubject.asObservable();\n  }\n  get session$() {\n    return this.sessionSubject.asObservable();\n  }\n  get client() {\n    return this.supabase;\n  }\n  signIn(email, password) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield _this3.ensureInitialized();\n      return _this3.loadingService.withLoading( /*#__PURE__*/_asyncToGenerator(function* () {\n        try {\n          const {\n            data,\n            error\n          } = yield _this3.supabase.auth.signInWithPassword({\n            email,\n            password\n          });\n          if (error) throw error;\n          return {\n            data,\n            error: null\n          };\n        } catch (error) {\n          console.error('Error signing in:', error);\n          _this3.notificationService.error('Error al iniciar sesión. Por favor, verifica tus credenciales.');\n          return {\n            data: null,\n            error: error\n          };\n        }\n      }));\n    })();\n  }\n  signUp(email, password) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      yield _this4.ensureInitialized();\n      return _this4.loadingService.withLoading( /*#__PURE__*/_asyncToGenerator(function* () {\n        try {\n          const {\n            data,\n            error\n          } = yield _this4.supabase.auth.signUp({\n            email,\n            password\n          });\n          if (error) throw error;\n          return {\n            data,\n            error: null\n          };\n        } catch (error) {\n          console.error('Error en el registro:', error);\n          _this4.notificationService.error('Error al crear la cuenta. Por favor, inténtalo de nuevo.');\n          return {\n            data: null,\n            error: error\n          };\n        }\n      }));\n    })();\n  }\n  signOut() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      yield _this5.ensureInitialized();\n      return _this5.loadingService.withLoading( /*#__PURE__*/_asyncToGenerator(function* () {\n        try {\n          yield _this5.supabase.auth.signOut();\n        } catch (error) {\n          console.error('Error signing out:', error);\n          _this5.notificationService.error('Error al cerrar sesión. Por favor, inténtalo de nuevo.');\n        }\n      }));\n    })();\n  }\n  static {\n    this.ɵfac = function SupabaseService_Factory(t) {\n      return new (t || SupabaseService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.NotificationService), i0.ɵɵinject(i3.LoadingService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SupabaseService,\n      factory: SupabaseService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["createClient","environment","BehaviorSubject","NavigatorLockAcquireTimeoutError","Error","constructor","message","name","SupabaseService","router","notificationService","loadingService","userSubject","sessionSubject","initialized","initializationPromise","supabase","url","anonKey","auth","autoRefreshToken","persistSession","detectSessionInUrl","storage","localStorage","storageKey","initializeAuth","_this","_asyncToGenerator","data","session","getSession","next","user","onAuthStateChange","event","navigate","info","success","error","console","ensureInitialized","_this2","user$","asObservable","session$","client","signIn","email","password","_this3","withLoading","signInWithPassword","signUp","_this4","signOut","_this5","i0","ɵɵinject","i1","Router","i2","NotificationService","i3","LoadingService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Claudia\\Desktop\\MesQueUnGrupDeDones1.0\\src\\app\\core\\services\\supabase.service.ts"],"sourcesContent":["// Definir el error NavigatorLockAcquireTimeoutError manualmente para evitar el error de compilación.\nclass NavigatorLockAcquireTimeoutError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = 'NavigatorLockAcquireTimeoutError';\n  }\n}\n\nimport { Injectable } from '@angular/core';\nimport {\n  createClient,\n  SupabaseClient,\n  User,\n  AuthError,\n  Session,\n} from '@supabase/supabase-js';\nimport { environment } from '../../../environments/environment';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { NotificationService } from './notification.service';\nimport { LoadingService } from './loading.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SupabaseService {\n  private supabase: SupabaseClient;\n  private userSubject = new BehaviorSubject<User | null>(null);\n  private sessionSubject = new BehaviorSubject<Session | null>(null);\n  private initialized = false;\n  private initializationPromise: Promise<void> | null = null;\n\n  constructor(\n    private router: Router,\n    private notificationService: NotificationService,\n    private loadingService: LoadingService\n  ) {\n    this.supabase = createClient(\n      environment.supabase.url,\n      environment.supabase.anonKey,\n      {\n        auth: {\n          autoRefreshToken: true,\n          persistSession: true,\n          detectSessionInUrl: false,\n          storage: localStorage,\n          storageKey: 'supabase.auth.token',\n        },\n      }\n    );\n    this.initializationPromise = this.initializeAuth();\n  }\n\n  private async initializeAuth(): Promise<void> {\n    try {\n      const { data: { session } } = await this.supabase.auth.getSession();\n      this.userSubject.next(session?.user || null);\n      this.sessionSubject.next(session || null);\n\n      this.supabase.auth.onAuthStateChange((event, session) => {\n        this.userSubject.next(session?.user || null);\n        this.sessionSubject.next(session || null);\n\n        if (event === 'SIGNED_OUT') {\n          this.router.navigate(['/']);\n          this.notificationService.info('Sessió tancada correctament');\n        } else if (event === 'SIGNED_IN') {\n          this.notificationService.success('Sessió iniciada correctament');\n        }\n      });\n      this.initialized = true;\n    } catch (error) {\n      if (error instanceof NavigatorLockAcquireTimeoutError) {\n        console.error('Failed to acquire lock for Supabase auth token:', error);\n        this.notificationService.error('Error al inicializar la sesión. Por favor, inténtalo de nuevo.');\n      } else {\n        console.error('Error initializing Supabase:', error);\n        this.notificationService.error('Error al inicializar Supabase. Por favor, inténtalo de nuevo.');\n      }\n    }\n  }\n\n  async ensureInitialized(): Promise<void> {\n    if (this.initializationPromise) {\n      await this.initializationPromise;\n    }\n  }\n\n  get user$(): Observable<User | null> {\n    return this.userSubject.asObservable();\n  }\n\n  get session$(): Observable<Session | null> {\n    return this.sessionSubject.asObservable();\n  }\n\n  get client(): SupabaseClient {\n    return this.supabase;\n  }\n\n  async signIn(email: string, password: string): Promise<{ data: any | null; error: AuthError | null }> {\n    await this.ensureInitialized();\n    return this.loadingService.withLoading(async () => {\n      try {\n        const { data, error } = await this.supabase.auth.signInWithPassword({\n          email,\n          password,\n        });\n        if (error) throw error;\n        return { data, error: null };\n      } catch (error) {\n        console.error('Error signing in:', error);\n        this.notificationService.error('Error al iniciar sesión. Por favor, verifica tus credenciales.');\n        return { data: null, error: error as AuthError };\n      }\n    });\n  }\n\n  async signUp(email: string, password: string): Promise<{ data: any | null; error: AuthError | null }> {\n    await this.ensureInitialized();\n    return this.loadingService.withLoading(async () => {\n      try {\n        const { data, error } = await this.supabase.auth.signUp({\n          email,\n          password,\n        });\n        if (error) throw error;\n        return { data, error: null };\n      } catch (error) {\n        console.error('Error en el registro:', error);\n        this.notificationService.error('Error al crear la cuenta. Por favor, inténtalo de nuevo.');\n        return { data: null, error: error as AuthError };\n      }\n    });\n  }\n\n  async signOut(): Promise<void> {\n    await this.ensureInitialized();\n    return this.loadingService.withLoading(async () => {\n      try {\n        await this.supabase.auth.signOut();\n      } catch (error) {\n        console.error('Error signing out:', error);\n        this.notificationService.error('Error al cerrar sesión. Por favor, inténtalo de nuevo.');\n      }\n    });\n  }\n}\n"],"mappings":";AASA,SACEA,YAAY,QAKP,uBAAuB;AAC9B,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,SAASC,eAAe,QAAoB,MAAM;;;;;AAjBlD;AACA,MAAMC,gCAAiC,SAAQC,KAAK;EAClDC,YAAYC,OAAgB;IAC1B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,kCAAkC;EAChD;;AAoBF,OAAM,MAAOC,eAAe;EAO1BH,YACUI,MAAc,EACdC,mBAAwC,EACxCC,cAA8B;IAF9B,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,cAAc,GAAdA,cAAc;IARhB,KAAAC,WAAW,GAAG,IAAIV,eAAe,CAAc,IAAI,CAAC;IACpD,KAAAW,cAAc,GAAG,IAAIX,eAAe,CAAiB,IAAI,CAAC;IAC1D,KAAAY,WAAW,GAAG,KAAK;IACnB,KAAAC,qBAAqB,GAAyB,IAAI;IAOxD,IAAI,CAACC,QAAQ,GAAGhB,YAAY,CAC1BC,WAAW,CAACe,QAAQ,CAACC,GAAG,EACxBhB,WAAW,CAACe,QAAQ,CAACE,OAAO,EAC5B;MACEC,IAAI,EAAE;QACJC,gBAAgB,EAAE,IAAI;QACtBC,cAAc,EAAE,IAAI;QACpBC,kBAAkB,EAAE,KAAK;QACzBC,OAAO,EAAEC,YAAY;QACrBC,UAAU,EAAE;;KAEf,CACF;IACD,IAAI,CAACV,qBAAqB,GAAG,IAAI,CAACW,cAAc,EAAE;EACpD;EAEcA,cAAcA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC1B,IAAI;QACF,MAAM;UAAEC,IAAI,EAAE;YAAEC;UAAO;QAAE,CAAE,SAASH,KAAI,CAACX,QAAQ,CAACG,IAAI,CAACY,UAAU,EAAE;QACnEJ,KAAI,CAACf,WAAW,CAACoB,IAAI,CAACF,OAAO,EAAEG,IAAI,IAAI,IAAI,CAAC;QAC5CN,KAAI,CAACd,cAAc,CAACmB,IAAI,CAACF,OAAO,IAAI,IAAI,CAAC;QAEzCH,KAAI,CAACX,QAAQ,CAACG,IAAI,CAACe,iBAAiB,CAAC,CAACC,KAAK,EAAEL,OAAO,KAAI;UACtDH,KAAI,CAACf,WAAW,CAACoB,IAAI,CAACF,OAAO,EAAEG,IAAI,IAAI,IAAI,CAAC;UAC5CN,KAAI,CAACd,cAAc,CAACmB,IAAI,CAACF,OAAO,IAAI,IAAI,CAAC;UAEzC,IAAIK,KAAK,KAAK,YAAY,EAAE;YAC1BR,KAAI,CAAClB,MAAM,CAAC2B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YAC3BT,KAAI,CAACjB,mBAAmB,CAAC2B,IAAI,CAAC,6BAA6B,CAAC;UAC9D,CAAC,MAAM,IAAIF,KAAK,KAAK,WAAW,EAAE;YAChCR,KAAI,CAACjB,mBAAmB,CAAC4B,OAAO,CAAC,8BAA8B,CAAC;UAClE;QACF,CAAC,CAAC;QACFX,KAAI,CAACb,WAAW,GAAG,IAAI;MACzB,CAAC,CAAC,OAAOyB,KAAK,EAAE;QACd,IAAIA,KAAK,YAAYpC,gCAAgC,EAAE;UACrDqC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;UACvEZ,KAAI,CAACjB,mBAAmB,CAAC6B,KAAK,CAAC,gEAAgE,CAAC;QAClG,CAAC,MAAM;UACLC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;UACpDZ,KAAI,CAACjB,mBAAmB,CAAC6B,KAAK,CAAC,+DAA+D,CAAC;QACjG;MACF;IAAC;EACH;EAEME,iBAAiBA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAd,iBAAA;MACrB,IAAIc,MAAI,CAAC3B,qBAAqB,EAAE;QAC9B,MAAM2B,MAAI,CAAC3B,qBAAqB;MAClC;IAAC;EACH;EAEA,IAAI4B,KAAKA,CAAA;IACP,OAAO,IAAI,CAAC/B,WAAW,CAACgC,YAAY,EAAE;EACxC;EAEA,IAAIC,QAAQA,CAAA;IACV,OAAO,IAAI,CAAChC,cAAc,CAAC+B,YAAY,EAAE;EAC3C;EAEA,IAAIE,MAAMA,CAAA;IACR,OAAO,IAAI,CAAC9B,QAAQ;EACtB;EAEM+B,MAAMA,CAACC,KAAa,EAAEC,QAAgB;IAAA,IAAAC,MAAA;IAAA,OAAAtB,iBAAA;MAC1C,MAAMsB,MAAI,CAACT,iBAAiB,EAAE;MAC9B,OAAOS,MAAI,CAACvC,cAAc,CAACwC,WAAW,eAAAvB,iBAAA,CAAC,aAAW;QAChD,IAAI;UACF,MAAM;YAAEC,IAAI;YAAEU;UAAK,CAAE,SAASW,MAAI,CAAClC,QAAQ,CAACG,IAAI,CAACiC,kBAAkB,CAAC;YAClEJ,KAAK;YACLC;WACD,CAAC;UACF,IAAIV,KAAK,EAAE,MAAMA,KAAK;UACtB,OAAO;YAAEV,IAAI;YAAEU,KAAK,EAAE;UAAI,CAAE;QAC9B,CAAC,CAAC,OAAOA,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;UACzCW,MAAI,CAACxC,mBAAmB,CAAC6B,KAAK,CAAC,gEAAgE,CAAC;UAChG,OAAO;YAAEV,IAAI,EAAE,IAAI;YAAEU,KAAK,EAAEA;UAAkB,CAAE;QAClD;MACF,CAAC,EAAC;IAAC;EACL;EAEMc,MAAMA,CAACL,KAAa,EAAEC,QAAgB;IAAA,IAAAK,MAAA;IAAA,OAAA1B,iBAAA;MAC1C,MAAM0B,MAAI,CAACb,iBAAiB,EAAE;MAC9B,OAAOa,MAAI,CAAC3C,cAAc,CAACwC,WAAW,eAAAvB,iBAAA,CAAC,aAAW;QAChD,IAAI;UACF,MAAM;YAAEC,IAAI;YAAEU;UAAK,CAAE,SAASe,MAAI,CAACtC,QAAQ,CAACG,IAAI,CAACkC,MAAM,CAAC;YACtDL,KAAK;YACLC;WACD,CAAC;UACF,IAAIV,KAAK,EAAE,MAAMA,KAAK;UACtB,OAAO;YAAEV,IAAI;YAAEU,KAAK,EAAE;UAAI,CAAE;QAC9B,CAAC,CAAC,OAAOA,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7Ce,MAAI,CAAC5C,mBAAmB,CAAC6B,KAAK,CAAC,0DAA0D,CAAC;UAC1F,OAAO;YAAEV,IAAI,EAAE,IAAI;YAAEU,KAAK,EAAEA;UAAkB,CAAE;QAClD;MACF,CAAC,EAAC;IAAC;EACL;EAEMgB,OAAOA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAA5B,iBAAA;MACX,MAAM4B,MAAI,CAACf,iBAAiB,EAAE;MAC9B,OAAOe,MAAI,CAAC7C,cAAc,CAACwC,WAAW,eAAAvB,iBAAA,CAAC,aAAW;QAChD,IAAI;UACF,MAAM4B,MAAI,CAACxC,QAAQ,CAACG,IAAI,CAACoC,OAAO,EAAE;QACpC,CAAC,CAAC,OAAOhB,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;UAC1CiB,MAAI,CAAC9C,mBAAmB,CAAC6B,KAAK,CAAC,wDAAwD,CAAC;QAC1F;MACF,CAAC,EAAC;IAAC;EACL;;;uBAzHW/B,eAAe,EAAAiD,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,mBAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,cAAA;IAAA;EAAA;;;aAAfxD,eAAe;MAAAyD,OAAA,EAAfzD,eAAe,CAAA0D,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}