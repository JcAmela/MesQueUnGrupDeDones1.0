{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nexport class NotificationService {\n  constructor(snackBar) {\n    this.snackBar = snackBar;\n  }\n  success(message) {\n    this.snackBar.open(message, 'Tancar', {\n      duration: 5000,\n      horizontalPosition: 'end',\n      verticalPosition: 'bottom',\n      panelClass: ['bg-green-600', 'text-white']\n    });\n  }\n  error(message) {\n    this.snackBar.open(message, 'Tancar', {\n      duration: 7000,\n      horizontalPosition: 'end',\n      verticalPosition: 'bottom',\n      panelClass: ['bg-red-600', 'text-white']\n    });\n  }\n  info(message) {\n    this.snackBar.open(message, 'Tancar', {\n      duration: 4000,\n      horizontalPosition: 'end',\n      verticalPosition: 'bottom',\n      panelClass: ['bg-blue-600', 'text-white']\n    });\n  }\n  loading(message) {\n    this.snackBar.open(message, null, {\n      duration: 3000,\n      // Duración del mensaje\n      horizontalPosition: 'end',\n      verticalPosition: 'bottom',\n      panelClass: ['bg-yellow-600', 'text-white']\n    });\n  }\n  static {\n    this.ɵfac = function NotificationService_Factory(t) {\n      return new (t || NotificationService)(i0.ɵɵinject(i1.MatSnackBar));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: NotificationService,\n      factory: NotificationService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["NotificationService","constructor","snackBar","success","message","open","duration","horizontalPosition","verticalPosition","panelClass","error","info","loading","i0","ɵɵinject","i1","MatSnackBar","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Claudia\\Desktop\\MesQueUnGrupDeDones1.0\\src\\app\\core\\services\\notification.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  constructor(private snackBar: MatSnackBar) {}\n\n  success(message: string): void {\n    this.snackBar.open(message, 'Tancar', {\n      duration: 5000,\n      horizontalPosition: 'end',\n      verticalPosition: 'bottom',\n      panelClass: ['bg-green-600', 'text-white']\n    });\n  }\n\n  error(message: string): void {\n    this.snackBar.open(message, 'Tancar', {\n      duration: 7000,\n      horizontalPosition: 'end',\n      verticalPosition: 'bottom',\n      panelClass: ['bg-red-600', 'text-white']\n    });\n  }\n\n  info(message: string): void {\n    this.snackBar.open(message, 'Tancar', {\n      duration: 4000,\n      horizontalPosition: 'end',\n      verticalPosition: 'bottom',\n      panelClass: ['bg-blue-600', 'text-white']\n    });\n  }\n\n  loading(message: string): void {\n    this.snackBar.open(message, null, {\n      duration: 3000, // Duración del mensaje\n      horizontalPosition: 'end',\n      verticalPosition: 'bottom',\n      panelClass: ['bg-yellow-600', 'text-white']\n    });\n  }\n}"],"mappings":";;AAMA,OAAM,MAAOA,mBAAmB;EAC9BC,YAAoBC,QAAqB;IAArB,KAAAA,QAAQ,GAARA,QAAQ;EAAgB;EAE5CC,OAAOA,CAACC,OAAe;IACrB,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACD,OAAO,EAAE,QAAQ,EAAE;MACpCE,QAAQ,EAAE,IAAI;MACdC,kBAAkB,EAAE,KAAK;MACzBC,gBAAgB,EAAE,QAAQ;MAC1BC,UAAU,EAAE,CAAC,cAAc,EAAE,YAAY;KAC1C,CAAC;EACJ;EAEAC,KAAKA,CAACN,OAAe;IACnB,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACD,OAAO,EAAE,QAAQ,EAAE;MACpCE,QAAQ,EAAE,IAAI;MACdC,kBAAkB,EAAE,KAAK;MACzBC,gBAAgB,EAAE,QAAQ;MAC1BC,UAAU,EAAE,CAAC,YAAY,EAAE,YAAY;KACxC,CAAC;EACJ;EAEAE,IAAIA,CAACP,OAAe;IAClB,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACD,OAAO,EAAE,QAAQ,EAAE;MACpCE,QAAQ,EAAE,IAAI;MACdC,kBAAkB,EAAE,KAAK;MACzBC,gBAAgB,EAAE,QAAQ;MAC1BC,UAAU,EAAE,CAAC,aAAa,EAAE,YAAY;KACzC,CAAC;EACJ;EAEAG,OAAOA,CAACR,OAAe;IACrB,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACD,OAAO,EAAE,IAAI,EAAE;MAChCE,QAAQ,EAAE,IAAI;MAAE;MAChBC,kBAAkB,EAAE,KAAK;MACzBC,gBAAgB,EAAE,QAAQ;MAC1BC,UAAU,EAAE,CAAC,eAAe,EAAE,YAAY;KAC3C,CAAC;EACJ;;;uBArCWT,mBAAmB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAAnBhB,mBAAmB;MAAAiB,OAAA,EAAnBjB,mBAAmB,CAAAkB,IAAA;MAAAC,UAAA,EAFlB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}